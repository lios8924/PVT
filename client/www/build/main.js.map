{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/config/config.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 111;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 111\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 153;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 153\n// module chunks = 0","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\nimport { Geolocation } from '@ionic-native/geolocation';\n\nimport { ConfigProvider, Config } from '../../providers/config/config';\n\ndeclare var google: any;\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  config: Config = { database: null };\n  map: any;\n  positionMarker: any;\n  @ViewChild('map') mapElement: ElementRef;\n\n  constructor(public navCtrl: NavController, public geo: Geolocation, public configProvider: ConfigProvider) {\n    this.showConfig();\n    this.initMap();\n  }\n\n  showConfig() {\n    this.configProvider.getConfig().subscribe(resp => {\n      this.config = resp;\n      console.log(this.config);\r\n    });\n\n    /*\n    this.configProvider.getConfig().subscribe(resp => {\n      this.config = resp;\n      console.log(this.config);\r\n    }, err => {\n      console.error(err);\n    });\n    */\r\n  }\n\n  initMap() {\n    this.geo.getCurrentPosition({ maximumAge: 3000, timeout: 5000, enableHighAccuracy: true }).then(resp => {\n      let myLocation = new google.maps.LatLng(resp.coords.latitude, resp.coords.longitude);\n      this.map = new google.maps.Map(this.mapElement.nativeElement, {\n        zoom: 15,\n        center: myLocation\n      });\n\n      this.positionMarker = new google.maps.Marker({\n        position: myLocation,\n        map: this.map\n      });\n    }, err => {\n      console.error(\"Error getting location:\", err);\n    })\r\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { Geolocation } from '@ionic-native/geolocation';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { ConfigProvider } from '../providers/config/config';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: ErrorHandler, useClass: IonicErrorHandler },\n    Geolocation,\n    ConfigProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ConfigProvider {\n\n  configUrl = \"assets/config.json\";\n\n  constructor(public http: HttpClient) {  }\n\n  getConfig() {\n    return this.http.get<Config>(this.configUrl);\r\n  }\n}\n\nexport interface Config {\n  database: string;\r\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/config/config.ts"],"sourceRoot":""}